version: "2.3"
# simple docker compose to play with Elasticsearch & Kibana locally
services:
  es:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.14.0
    environment:
      discovery.type: "single-node"
      cluster.name: "docker-cluster"
      bootstrap.memory_lock: "true"
      cluster.routing.allocation.disk.watermark.low: "3gb"
      cluster.routing.allocation.disk.watermark.high: "2gb"
      cluster.routing.allocation.disk.watermark.flood_stage: "1gb"
      cluster.routing.allocation.disk.threshold_enabled: "false"
      network.host: "127.0.0.1"
      http.host: "0.0.0.0"
      http.cors.enabled: "true"
      indices.id_field_data.enabled: true
      http.cors.allow-origin: |-
        "*"
      http.cors.allow-methods: "OPTIONS, HEAD, GET, POST, PUT, DELETE"
      http.cors.allow-headers: "X-Requested-With, X-Auth-Token, Content-Type, Content-Length, Authorization, Access-Control-Allow-Headers, Accept"
      xpack.security.enabled: "false"
      ES_JAVA_OPTS: "-Xms1024m -Xmx1024m"
      ES_TEMP: "/tmp"
    ports:
      - "9200:9200"
      - "9300:9300"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data:/usr/share/elasticsearch/data
  kibana:
    image: docker.elastic.co/kibana/kibana:8.14.0
    environment:
      SERVER_NAME: localhost
      ELASTICSEARCH_URL: http://es:9200
    ports:
      - "5601:5601"
volumes:
  data:
    driver: local
