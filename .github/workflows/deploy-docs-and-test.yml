name: matrix-test-and-deploy-docs

on:
  push:
    branches:
      - master
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout the code
      uses: actions/checkout@master
    - name: Setup Java
      uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: '17'
        cache: gradle
    - name: Install cURL Headers
      run: sudo apt-get install libcurl4-openssl-dev
    - name: Compose up
      run: ./gradlew :search-client:composeUp
    - name: Gradle Build
      run: ./gradlew build :search-client:dokkaHtml
    - name: Compose down
      run: ./gradlew :search-client:composeDown
    - name: Deploy Manual
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./docs/build/manual
        enable_jekyll: true
        destination_dir: manual
    - name: Deploy Dokka
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./search-client/build/dokka/html
        enable_jekyll: true
        destination_dir: api
  matrix-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version: ["es-7","es-8","os-1", "os-2"]
    steps:
      - name: Checkout the code
        uses: actions/checkout@master
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '17'
          cache: gradle
#      - name: Cache build .gradle dir
#        uses: actions/cache@v3
#        with:
#          path: |
#            ~/.gradle
#            .gradle
#          key: ${{ runner.os }}-gradle-${{ hashFiles('**/build.gradle.kts') }}
      - name: Compose up
        run: ./gradlew :search-client:composeUp -PsearchEngine=${{ matrix.version }}
      - name: Gradle Build
        run: ./gradlew :search-client:check -PsearchEngine=${{ matrix.version }}
      - name: Compose down
        run: ./gradlew :search-client:composeDown -PsearchEngine=${{ matrix.version }}


